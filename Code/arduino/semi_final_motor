/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/6b4aa854-3e8a-4314-adb5-722b68b1e8b4 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  float feuchtigkeit;
  float temp;
  int kohli;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/
 float humidity = 1.0;
bool isOpen = false;
#include "thingProperties.h"

#include <AccelStepper.h>

// Stabilere Pins (vermeide GPIO0 und GPIO15)
#define IN1 D5  
#define IN2 D6  
#define IN3 D7  
#define IN4 D2  

AccelStepper stepper(AccelStepper::HALF4WIRE, IN1, IN3, IN2, IN4);

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 

  Serial.println("Stepper-Test (stabil)");
  
 stepper.setCurrentPosition(0); //  Window is closed on start
  stepper.setMaxSpeed(500); // Motor speed
  stepper.setAcceleration(200); // acceleration
  stepper.setSpeed(300);

 

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
//setDebugMessageLevel(2);
//  ArduinoCloud.printDebugInfo();
}

void loop() {
  ArduinoCloud.update();

Serial.print(kohli);
Serial.print("  ");
  delay(1000);
    
    if (kohli > 700) { // acceptable CO2 value but it should open
  stepper.moveTo(1024);
      isOpen = true;
  while (stepper.run()) {
    yield(); // hinders Watchdog-Reset
    } 
  }


  
  if (kohli < 600 && isOpen) { // close  if open
      stepper.moveTo(0);
    isOpen = false;
  while (stepper.run()) {
    yield();
  }
  }

      

}



/*
  Since Feuchtigkeit is READ_WRITE variable, onFeuchtigkeitChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onFeuchtigkeitChange()  {  
}



/*
  Since Temp is READ_WRITE variable, onTempChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onTempChange()  {
  // Add your code here to act upon Temp change
}





/*
  Since Kohli is READ_WRITE variable, onKohliChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onKohliChange()  {
  // Add your code here to act upon Kohli change
}
